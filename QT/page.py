from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(800, 600)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setGeometry(QtCore.QRect(190, 450, 391, 61))
        font = QtGui.QFont()
        font.setFamily("Sitka Small Semibold")
        font.setPointSize(18)
        font.setBold(True)
        font.setWeight(75)
        self.label.setFont(font)
        self.label.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.label.setAlignment(QtCore.Qt.AlignCenter)
        self.label.setObjectName("label")
        self.button = QtWidgets.QPushButton(self.centralwidget)
        self.button.setGeometry(QtCore.QRect(330, 510, 93, 28))
        self.button.setCursor(QtGui.QCursor(QtCore.Qt.CrossCursor))
        self.button.setObjectName("btn")
        self.img1 = QtWidgets.QLabel(self.centralwidget)
        self.img1.setGeometry(QtCore.QRect(10, 0, 781, 411))
        self.img1.setAcceptDrops(False)
        self.img1.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.img1.setText("")
        self.img1.setPixmap(QtGui.QPixmap("..\\PycharmProjects\\Random_GUI\\QT\\img45.jpg"))
        self.img1.setScaledContents(True)
        self.img1.setObjectName("img1")
        self.anime_b = QtWidgets.QPushButton(self.centralwidget)
        self.anime_b.setGeometry(QtCore.QRect(0, 420, 391, 41))
        self.anime_b.setObjectName("anime_b")
        self.not_anime_b = QtWidgets.QPushButton(self.centralwidget)
        self.not_anime_b.setGeometry(QtCore.QRect(400, 420, 391, 41))
        self.not_anime_b.setObjectName("not_anime_b")
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 800, 26))
        self.menubar.setObjectName("menubar")
        self.menuMain = QtWidgets.QMenu(self.menubar)
        self.menuMain.setObjectName("menuMain")
        self.menuEdit = QtWidgets.QMenu(self.menubar)
        self.menuEdit.setObjectName("menuEdit")
        self.menuView = QtWidgets.QMenu(self.menubar)
        self.menuView.setObjectName("menuView")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.actionsave = QtWidgets.QAction(MainWindow)
        self.actionsave.setCheckable(True)
        self.actionsave.setChecked(False)
        self.actionsave.setObjectName("actionsave")
        self.actionopen_file = QtWidgets.QAction(MainWindow)
        self.actionopen_file.setObjectName("actionopen_file")
        self.actioncopy = QtWidgets.QAction(MainWindow)
        self.actioncopy.setObjectName("actioncopy")
        self.actionpast = QtWidgets.QAction(MainWindow)
        self.actionpast.setObjectName("actionpast")
        self.actionOpen_file = QtWidgets.QAction(MainWindow)
        self.actionOpen_file.setObjectName("actionOpen_file")
        self.actionOpen_folder = QtWidgets.QAction(MainWindow)
        self.actionOpen_folder.setObjectName("actionOpen_folder")
        self.menuMain.addAction(self.actionsave)
        self.menuMain.addAction(self.actionopen_file)
        self.menuEdit.addAction(self.actioncopy)
        self.menuEdit.addAction(self.actionpast)
        self.menuView.addAction(self.actionOpen_file)
        self.menuView.addAction(self.actionOpen_folder)
        self.menubar.addAction(self.menuMain.menuAction())
        self.menubar.addAction(self.menuEdit.menuAction())
        self.menubar.addAction(self.menuView.menuAction())

        self.actionpast.triggered.connect(lambda: self.clicked("past button clicked"))
        self.actioncopy.triggered.connect(lambda: self.clicked("copy button clicked"))
        self.actionsave.triggered.connect(lambda: self.clicked("save button clicked"))
        self.actionopen_file.triggered.connect(lambda: self.clicked("open file button clicked"))
        self.actionOpen_folder.triggered.connect(lambda: self.clicked("open folder button clicked"))
        self.actionOpen_file.triggered.connect(lambda: self.clicked("open file button clicked"))
        self.button.clicked.connect(lambda: self.clicked("click me button clicked"))
        self.not_anime_b.clicked.connect(self.not_anime_button)
        self.anime_b.clicked.connect(self.anime_button)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.label.setText(_translate("MainWindow", "TextLabel"))
        self.button.setText(_translate("MainWindow", "chickme"))
        self.anime_b.setText(_translate("MainWindow", "Anime"))
        self.not_anime_b.setText(_translate("MainWindow", "Not Anime"))
        self.menuMain.setTitle(_translate("MainWindow", "Main"))
        self.menuEdit.setTitle(_translate("MainWindow", "Edit"))
        self.menuView.setTitle(_translate("MainWindow", "View"))
        self.actionsave.setText(_translate("MainWindow", "save"))
        self.actionsave.setShortcut(_translate("MainWindow", "Ctrl+S"))
        self.actionopen_file.setText(_translate("MainWindow", "open file"))
        self.actionopen_file.setShortcut(_translate("MainWindow", "Ctrl+O"))
        self.actioncopy.setText(_translate("MainWindow", "copy"))
        self.actioncopy.setShortcut(_translate("MainWindow", "Ctrl+C"))
        self.actionpast.setText(_translate("MainWindow", "past"))
        self.actionpast.setShortcut(_translate("MainWindow", "Ctrl+V"))
        self.actionOpen_file.setText(_translate("MainWindow", "Open file"))
        self.actionOpen_folder.setText(_translate("MainWindow", "Open folder"))
        self.actionOpen_folder.setShortcut(_translate("MainWindow", "Ctrl+Alt+ÅŒ"))

    def clicked(self, text):
        self.label.setText(text)
        self.label.adjustSize()

    def not_anime_button(self):
        self.img1.setPixmap(QtGui.QPixmap("..\\PycharmProjects\\Random_GUI\\QT\\img44.jpg"))
        
    def anime_button(self):
        self.img1.setPixmap(QtGui.QPixmap("..\\PycharmProjects\\Random_GUI\\QT\\img45.jpg"))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
